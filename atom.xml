<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Vinícius Moisés de Oliveira]]></title>
  <link href="http://viniciusmo.github.com/atom.xml" rel="self"/>
  <link href="http://viniciusmo.github.com/"/>
  <updated>2013-01-24T15:53:56-02:00</updated>
  <id>http://viniciusmo.github.com/</id>
  <author>
    <name><![CDATA[Vinícius Moisés de Oliveira]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS : Automatic Counting Reference - ARC]]></title>
    <link href="http://viniciusmo.github.com/blog/2013/01/24/ios-automatic-counting-reference-arc/"/>
    <updated>2013-01-24T14:58:00-02:00</updated>
    <id>http://viniciusmo.github.com/blog/2013/01/24/ios-automatic-counting-reference-arc</id>
    <content type="html"><![CDATA[<h1>Introdução</h1>

<p>A grande mudança no iOS 5 foi o novo recurso adicionado  chamado de contador automático de referência (ARC - Automatic Counting Reference).ARC é uma característica do novo compilador LLVM 3.0 que acaba completamente com  o gerenciamento  de memória manual.Usar o ARC em seus projetos é extremamente simples.Você mantém o mesmo código, como de costume, exceto que você não precisa realizar chamadas a release , retain ou ao autorelease.O ARC realiza todas essas tarefas pra você :).<br/>
Com o ARC habilitado , o compilador irá inserir automaticamente retain,release e autorelease nos lugares corretos em seu programa.Mas se você ainda está cético  sobre o ARC - talvez você não confia  que ele vai fazer sempre a coisa certa, ou você acha que isso de alguma formar vai ser mais lento do que fazendo o gerenciamento de memória manual, se você acha isso , continue a ler.</p>
]]></content>
  </entry>
  
</feed>
